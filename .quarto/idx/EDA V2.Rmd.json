{"title":"EDA","markdown":{"yaml":{"title":"EDA","author":"Saadia Abdullah","date":"2025-09-21","output":"html_document"},"headingText":"Explanatory Data Analysis","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n### Load Libraries\n\n```{r libraries}\n\nlibrary(tidyverse)\nlibrary(corrplot)\nlibrary(VIM)\nlibrary(gridExtra)\nlibrary(lubridate)\nlibrary(mice)\nlibrary(caret)\n\n```\n\n### Load Data\n\n```{r data}\n\nset.seed(12345)\n\ndata <- read.csv('/Users/saadiaabdullah/Desktop/UCT/2025/Data Science For Industry/EDA Assignment 1/scotland_avalanche_forecasts_2009_2025 (1).csv')\n\ndim(data)\nprint(summary(data))\n\ndata$Date <- as.Date(data$Date) # date as date type\n\ndata$FAH[data$FAH == \"\"] <- NA\n\n# Create ordinal encoding\ndata$FAH_numeric <- case_when(\n  data$FAH == \"Low\" ~ 1,\n  data$FAH == \"Moderate\" ~ 2,\n  data$FAH == \"Considerable -\" ~ 3,\n  data$FAH == \"Considerable +\" ~ 4,\n  data$FAH == \"High\" ~ 5,\n  TRUE ~ NA_real_\n)\n\ndata$FAH <- factor(data$FAH, \n                   levels = c(\"Low\", \"Moderate\", \"Considerable -\", \n                             \"Considerable +\", \"High\"),\n                   ordered = TRUE)\n\n```\n\n### FAH Distribution\n\n```{r FAH}\n\nggplot(data, aes(x = factor(FAH))) +\n  geom_bar(fill = \"darkblue\") +\n  labs(title = \"Distribution of Forecasted Avalanche Hazard (FAH)\",\n       x = \"FAH\", y = \"Count\") +\n  theme_minimal() \n\nggplot(data , aes(x = factor(FAH), fill = Area)) +\n  geom_bar(position = \"dodge\") +\n  labs(title = \"FAH Distribution by Area\",\n       x = \"FAH\", y = \"Count\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n```\n\n### Missing data and Imputation\n\n```{r imputation}\n\nmissing_data <- data %>%\n  summarise_all(~sum(is.na(.))) %>%\n  gather(key = \"Variable\", value = \"Missing_Count\") %>%\n  mutate(Missing_Perc = round((Missing_Count / nrow(data)) * 100, 2)) %>%\n  arrange(desc(Missing_Perc))\n\nprint(missing_data)\n\n# Imputation\n\n# No variables have more than 50% missing data so impute all missing values.\n\npred_1 <- c(\"longitude\", \"latitude\", \"Alt\", \"Aspect\", \"Incline\")\n\npred_2 <- c(\"Air.Temp\", \"Wind.Dir\", \"Wind.Speed\", \"Cloud\", \"Drift\",\n                     \"Summit.Air.Temp\", \"Summit.Wind.Dir\", \"Summit.Wind.Speed\")\n\npred_3 <- c(\"Max.Temp.Grad\", \"Max.Hardness.Grad\", \"No.Settle\", \n                     \"Snow.Index\", \"Insolation\", \"Crystals\", \"Wetness\", \"Snow.Temp\")\n\nall_pred <- c(pred_1, pred_2, pred_3)\n\n# Missing data plot\n\nmd.pattern(data[,c(\"FAH_numeric\", all_pred[1:min(10, length(all_pred))])], rotate.names = TRUE) \n\nmice_data <- data %>%\n  select(FAH_numeric, all_of(all_pred))\n\nset.seed(12345)\n\nmice_output <- mice(mice_data, m = 5, method = 'pmm', printFlag = FALSE)\n\ndata_imputed <- complete(mice_output, 1)\n\n# Diagnostic Plots\n# Strip plot - shows distribution of imputed values\n\nstripplot(mice_output, pch=20, cex=1.2)\n\ndensityplot(mice_output, ~ Alt)\ndensityplot(mice_output, ~ Aspect)\ndensityplot(mice_output, ~ Incline)\n\ndensityplot(mice_output, ~ Air.Temp) # bad\ndensityplot(mice_output, ~ Wind.Dir)\ndensityplot(mice_output, ~ Wind.Speed)\ndensityplot(mice_output, ~ Cloud) # bad\n\ndensityplot(mice_output, ~ Summit.Air.Temp)\ndensityplot(mice_output, ~ Summit.Wind.Dir)\ndensityplot(mice_output, ~ Summit.Wind.Speed)\n\ndensityplot(mice_output, ~ Max.Temp.Grad)\ndensityplot(mice_output, ~ Max.Hardness.Grad) # bad\ndensityplot(mice_output, ~ No.Settle)\ndensityplot(mice_output, ~ Snow.Index)\ndensityplot(mice_output, ~ Insolation)\ndensityplot(mice_output, ~ Crystals) # bad\ndensityplot(mice_output, ~ Wetness) # bad\ndensityplot(mice_output, ~ Snow.Temp) # bad\n\n# Convergence plot\n\nplot(mice_output, main = \"MICE Convergence - All Variables\")\n\nbad_vars <- c(\"Air.Temp\", \"Cloud\", \"Max.Hardness.Grad\", \n              \"Crystals\", \"Wetness\", \"Snow.Temp\")\n\nmice_data <- mice_data %>%\n  select(FAH_numeric, all_of(setdiff(all_pred, bad_vars)))\n\ndim(mice_data)\n\nset.seed(12345)\n\nmice_output2 <- mice(mice_data, m = 5, method = 'pmm', printFlag = FALSE)\ndata_imputed2 <- complete(mice_output2, 1)\n\n```\n\n### Outlier Detection\n\n```{r outliers}\n\ncont_vars <- c(\"longitude\", \"latitude\", \"Alt\", \"Aspect\", \"Incline\",\n                     \"Wind.Dir\", \"Wind.Speed\", \"Summit.Air.Temp\", \n                     \"Summit.Wind.Dir\", \"Summit.Wind.Speed\",\n                     \"Max.Temp.Grad\", \"No.Settle\", \"Snow.Index\", \"Insolation\")\n\ncont_vars <- cont_vars[cont_vars %in% names(data_imputed2)]\n\n# Handle outliers by capping them\n\nfor(var in cont_vars) {\n  if(var %in% names(data_imputed2) && is.numeric(data_imputed2[[var]])) {\n    \n    x <- data_imputed2[[var]]\n    \n    lower_bound <- quantile(x, 0.01, na.rm = TRUE)\n    upper_bound <- quantile(x, 0.99, na.rm = TRUE)\n    \n    n_outliers <- sum(x < lower_bound | x > upper_bound, na.rm = TRUE)\n    data_imputed2[[var]][x < lower_bound] <- lower_bound\n    data_imputed2[[var]][x > upper_bound] <- upper_bound\n  \n  }\n}\n\n```\n\n\n### Correlation Analysis\n\n```{r corr}\n\n# Use imputed data (no missing values)\n\ncorr_data <- data_imputed2  \n\ncorr_matrix <- cor(corr_data, use = \"complete.obs\")\n\n# Correlation with FAH\nfah_corr <- corr_matrix[,\"FAH_numeric\"] %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(Correlation = \".\") %>%\n  filter(Variable != \"FAH_numeric\") %>%\n  arrange(desc(abs(Correlation)))\n\n# Top 10 correlations with FAH\nprint(head(fah_corr, 10))\n\n# Correlation heatmap\ncorrplot(corr_matrix, method = \"color\", type = \"upper\", \n         order = \"hclust\", tl.cex = 0.7, tl.col = \"black\")\n\n# FAH Correlation\n\ndata_imputed2$FAH <- factor(data_imputed2$FAH_numeric,\n                           levels = 1:5,\n                           labels = c(\"Low\", \"Moderate\", \"Considerable -\", \n                                     \"Considerable +\", \"High\"))\n\n# Predictor 1\n\npredictor_1 <- pred_1[pred_1 %in% names(data_imputed2)]\n\ndata1 <- data_imputed2 %>%\n  select(FAH, FAH_numeric, all_of(predictor_1))\n\ncorr1 <- cor(data1[,predictor_1], data1$FAH_numeric) %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(FAH_Correlation = \"V1\") %>%\n  arrange(desc(abs(FAH_Correlation)))\n\n# Create boxplots\nplot1 <- list()\nfor(i in 1:min(4, length(predictor_1))) {\n  var <- predictor_1[i]\n  plot1[[i]] <- ggplot(data1, aes(x = factor(FAH), y = .data[[var]])) +\n    geom_boxplot(fill = \"darkblue\", alpha = 0.7) +\n    labs(title = paste(var, \"vs FAH\"),\n         x = \"FAH\", y = var) +\n    theme_minimal()\n}\n\ndo.call(grid.arrange, c(plot1, ncol = 2))\n\n# Predictor 2\n\npredictor_2 <- pred_2[pred_2 %in% names(data_imputed2)]\n\ndata2 <- data_imputed2 %>%\n  select(FAH, FAH_numeric, all_of(predictor_2))\n\ncorr2 <- cor(data2[,predictor_2], data2$FAH_numeric) %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(FAH_Correlation = \"V1\") %>%\n  arrange(desc(abs(FAH_Correlation)))\n\nplot2 <- list()\nfor(i in 1:min(4, length(predictor_2))) {\n  var <- predictor_2[i]\n  plot2[[i]] <- ggplot(data2, aes(x = factor(FAH), y = .data[[var]])) +\n    geom_boxplot(fill = \"darkgreen\", alpha = 0.7) +\n    labs(title = paste(var, \"vs FAH\"),\n         x = \"FAH\", y = var) +\n    theme_minimal()\n}\n\ndo.call(grid.arrange, c(plot2, ncol = 2))\n\n# Predictor 3\n\npredictor_3 <- pred_3[pred_3 %in% names(data_imputed2)]\n\ndata3 <- data_imputed2 %>%\n  select(FAH, FAH_numeric, all_of(predictor_3))\n\ncorr3 <- cor(data3[,predictor_3], data3$FAH_numeric) %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(FAH_Correlation = \"V1\") %>%\n  arrange(desc(abs(FAH_Correlation)))\n\nplot3 <- list()\nfor(i in 1:min(4, length(predictor_3))) {\n  var <- predictor_3[i]\n  plot3[[i]] <- ggplot(data3, aes(x = factor(FAH), y = .data[[var]])) +\n    geom_boxplot(fill = \"darkred\", alpha = 0.7) +\n    labs(title = paste(var, \"vs FAH\"),\n         x = \"FAH\", y = var) +\n    theme_minimal()\n}\n\ndo.call(grid.arrange, c(plot3, ncol = 2))\n\n```\n\n```{r scale data}\n\nset.seed(12345)\n\ntrain_index <- createDataPartition(data_imputed2$FAH_numeric, \n                                   p = 0.7, \n                                   list = FALSE)\ntrain_data <- data_imputed2[train_index, ]\ntest_data <- data_imputed2[-train_index, ]\n\n# Standardisation\n\npreproc_obj <- preProcess(\n  train_data %>% select(all_of(cont_vars)),\n  method = c(\"center\", \"scale\")  \n)\n\ntrain_scaled <- predict(preproc_obj, train_data)\ntest_scaled <- predict(preproc_obj, test_data)\n\n```\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Explanatory Data Analysis\n\n### Load Libraries\n\n```{r libraries}\n\nlibrary(tidyverse)\nlibrary(corrplot)\nlibrary(VIM)\nlibrary(gridExtra)\nlibrary(lubridate)\nlibrary(mice)\nlibrary(caret)\n\n```\n\n### Load Data\n\n```{r data}\n\nset.seed(12345)\n\ndata <- read.csv('/Users/saadiaabdullah/Desktop/UCT/2025/Data Science For Industry/EDA Assignment 1/scotland_avalanche_forecasts_2009_2025 (1).csv')\n\ndim(data)\nprint(summary(data))\n\ndata$Date <- as.Date(data$Date) # date as date type\n\ndata$FAH[data$FAH == \"\"] <- NA\n\n# Create ordinal encoding\ndata$FAH_numeric <- case_when(\n  data$FAH == \"Low\" ~ 1,\n  data$FAH == \"Moderate\" ~ 2,\n  data$FAH == \"Considerable -\" ~ 3,\n  data$FAH == \"Considerable +\" ~ 4,\n  data$FAH == \"High\" ~ 5,\n  TRUE ~ NA_real_\n)\n\ndata$FAH <- factor(data$FAH, \n                   levels = c(\"Low\", \"Moderate\", \"Considerable -\", \n                             \"Considerable +\", \"High\"),\n                   ordered = TRUE)\n\n```\n\n### FAH Distribution\n\n```{r FAH}\n\nggplot(data, aes(x = factor(FAH))) +\n  geom_bar(fill = \"darkblue\") +\n  labs(title = \"Distribution of Forecasted Avalanche Hazard (FAH)\",\n       x = \"FAH\", y = \"Count\") +\n  theme_minimal() \n\nggplot(data , aes(x = factor(FAH), fill = Area)) +\n  geom_bar(position = \"dodge\") +\n  labs(title = \"FAH Distribution by Area\",\n       x = \"FAH\", y = \"Count\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n```\n\n### Missing data and Imputation\n\n```{r imputation}\n\nmissing_data <- data %>%\n  summarise_all(~sum(is.na(.))) %>%\n  gather(key = \"Variable\", value = \"Missing_Count\") %>%\n  mutate(Missing_Perc = round((Missing_Count / nrow(data)) * 100, 2)) %>%\n  arrange(desc(Missing_Perc))\n\nprint(missing_data)\n\n# Imputation\n\n# No variables have more than 50% missing data so impute all missing values.\n\npred_1 <- c(\"longitude\", \"latitude\", \"Alt\", \"Aspect\", \"Incline\")\n\npred_2 <- c(\"Air.Temp\", \"Wind.Dir\", \"Wind.Speed\", \"Cloud\", \"Drift\",\n                     \"Summit.Air.Temp\", \"Summit.Wind.Dir\", \"Summit.Wind.Speed\")\n\npred_3 <- c(\"Max.Temp.Grad\", \"Max.Hardness.Grad\", \"No.Settle\", \n                     \"Snow.Index\", \"Insolation\", \"Crystals\", \"Wetness\", \"Snow.Temp\")\n\nall_pred <- c(pred_1, pred_2, pred_3)\n\n# Missing data plot\n\nmd.pattern(data[,c(\"FAH_numeric\", all_pred[1:min(10, length(all_pred))])], rotate.names = TRUE) \n\nmice_data <- data %>%\n  select(FAH_numeric, all_of(all_pred))\n\nset.seed(12345)\n\nmice_output <- mice(mice_data, m = 5, method = 'pmm', printFlag = FALSE)\n\ndata_imputed <- complete(mice_output, 1)\n\n# Diagnostic Plots\n# Strip plot - shows distribution of imputed values\n\nstripplot(mice_output, pch=20, cex=1.2)\n\ndensityplot(mice_output, ~ Alt)\ndensityplot(mice_output, ~ Aspect)\ndensityplot(mice_output, ~ Incline)\n\ndensityplot(mice_output, ~ Air.Temp) # bad\ndensityplot(mice_output, ~ Wind.Dir)\ndensityplot(mice_output, ~ Wind.Speed)\ndensityplot(mice_output, ~ Cloud) # bad\n\ndensityplot(mice_output, ~ Summit.Air.Temp)\ndensityplot(mice_output, ~ Summit.Wind.Dir)\ndensityplot(mice_output, ~ Summit.Wind.Speed)\n\ndensityplot(mice_output, ~ Max.Temp.Grad)\ndensityplot(mice_output, ~ Max.Hardness.Grad) # bad\ndensityplot(mice_output, ~ No.Settle)\ndensityplot(mice_output, ~ Snow.Index)\ndensityplot(mice_output, ~ Insolation)\ndensityplot(mice_output, ~ Crystals) # bad\ndensityplot(mice_output, ~ Wetness) # bad\ndensityplot(mice_output, ~ Snow.Temp) # bad\n\n# Convergence plot\n\nplot(mice_output, main = \"MICE Convergence - All Variables\")\n\nbad_vars <- c(\"Air.Temp\", \"Cloud\", \"Max.Hardness.Grad\", \n              \"Crystals\", \"Wetness\", \"Snow.Temp\")\n\nmice_data <- mice_data %>%\n  select(FAH_numeric, all_of(setdiff(all_pred, bad_vars)))\n\ndim(mice_data)\n\nset.seed(12345)\n\nmice_output2 <- mice(mice_data, m = 5, method = 'pmm', printFlag = FALSE)\ndata_imputed2 <- complete(mice_output2, 1)\n\n```\n\n### Outlier Detection\n\n```{r outliers}\n\ncont_vars <- c(\"longitude\", \"latitude\", \"Alt\", \"Aspect\", \"Incline\",\n                     \"Wind.Dir\", \"Wind.Speed\", \"Summit.Air.Temp\", \n                     \"Summit.Wind.Dir\", \"Summit.Wind.Speed\",\n                     \"Max.Temp.Grad\", \"No.Settle\", \"Snow.Index\", \"Insolation\")\n\ncont_vars <- cont_vars[cont_vars %in% names(data_imputed2)]\n\n# Handle outliers by capping them\n\nfor(var in cont_vars) {\n  if(var %in% names(data_imputed2) && is.numeric(data_imputed2[[var]])) {\n    \n    x <- data_imputed2[[var]]\n    \n    lower_bound <- quantile(x, 0.01, na.rm = TRUE)\n    upper_bound <- quantile(x, 0.99, na.rm = TRUE)\n    \n    n_outliers <- sum(x < lower_bound | x > upper_bound, na.rm = TRUE)\n    data_imputed2[[var]][x < lower_bound] <- lower_bound\n    data_imputed2[[var]][x > upper_bound] <- upper_bound\n  \n  }\n}\n\n```\n\n\n### Correlation Analysis\n\n```{r corr}\n\n# Use imputed data (no missing values)\n\ncorr_data <- data_imputed2  \n\ncorr_matrix <- cor(corr_data, use = \"complete.obs\")\n\n# Correlation with FAH\nfah_corr <- corr_matrix[,\"FAH_numeric\"] %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(Correlation = \".\") %>%\n  filter(Variable != \"FAH_numeric\") %>%\n  arrange(desc(abs(Correlation)))\n\n# Top 10 correlations with FAH\nprint(head(fah_corr, 10))\n\n# Correlation heatmap\ncorrplot(corr_matrix, method = \"color\", type = \"upper\", \n         order = \"hclust\", tl.cex = 0.7, tl.col = \"black\")\n\n# FAH Correlation\n\ndata_imputed2$FAH <- factor(data_imputed2$FAH_numeric,\n                           levels = 1:5,\n                           labels = c(\"Low\", \"Moderate\", \"Considerable -\", \n                                     \"Considerable +\", \"High\"))\n\n# Predictor 1\n\npredictor_1 <- pred_1[pred_1 %in% names(data_imputed2)]\n\ndata1 <- data_imputed2 %>%\n  select(FAH, FAH_numeric, all_of(predictor_1))\n\ncorr1 <- cor(data1[,predictor_1], data1$FAH_numeric) %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(FAH_Correlation = \"V1\") %>%\n  arrange(desc(abs(FAH_Correlation)))\n\n# Create boxplots\nplot1 <- list()\nfor(i in 1:min(4, length(predictor_1))) {\n  var <- predictor_1[i]\n  plot1[[i]] <- ggplot(data1, aes(x = factor(FAH), y = .data[[var]])) +\n    geom_boxplot(fill = \"darkblue\", alpha = 0.7) +\n    labs(title = paste(var, \"vs FAH\"),\n         x = \"FAH\", y = var) +\n    theme_minimal()\n}\n\ndo.call(grid.arrange, c(plot1, ncol = 2))\n\n# Predictor 2\n\npredictor_2 <- pred_2[pred_2 %in% names(data_imputed2)]\n\ndata2 <- data_imputed2 %>%\n  select(FAH, FAH_numeric, all_of(predictor_2))\n\ncorr2 <- cor(data2[,predictor_2], data2$FAH_numeric) %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(FAH_Correlation = \"V1\") %>%\n  arrange(desc(abs(FAH_Correlation)))\n\nplot2 <- list()\nfor(i in 1:min(4, length(predictor_2))) {\n  var <- predictor_2[i]\n  plot2[[i]] <- ggplot(data2, aes(x = factor(FAH), y = .data[[var]])) +\n    geom_boxplot(fill = \"darkgreen\", alpha = 0.7) +\n    labs(title = paste(var, \"vs FAH\"),\n         x = \"FAH\", y = var) +\n    theme_minimal()\n}\n\ndo.call(grid.arrange, c(plot2, ncol = 2))\n\n# Predictor 3\n\npredictor_3 <- pred_3[pred_3 %in% names(data_imputed2)]\n\ndata3 <- data_imputed2 %>%\n  select(FAH, FAH_numeric, all_of(predictor_3))\n\ncorr3 <- cor(data3[,predictor_3], data3$FAH_numeric) %>%\n  as.data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  rename(FAH_Correlation = \"V1\") %>%\n  arrange(desc(abs(FAH_Correlation)))\n\nplot3 <- list()\nfor(i in 1:min(4, length(predictor_3))) {\n  var <- predictor_3[i]\n  plot3[[i]] <- ggplot(data3, aes(x = factor(FAH), y = .data[[var]])) +\n    geom_boxplot(fill = \"darkred\", alpha = 0.7) +\n    labs(title = paste(var, \"vs FAH\"),\n         x = \"FAH\", y = var) +\n    theme_minimal()\n}\n\ndo.call(grid.arrange, c(plot3, ncol = 2))\n\n```\n\n```{r scale data}\n\nset.seed(12345)\n\ntrain_index <- createDataPartition(data_imputed2$FAH_numeric, \n                                   p = 0.7, \n                                   list = FALSE)\ntrain_data <- data_imputed2[train_index, ]\ntest_data <- data_imputed2[-train_index, ]\n\n# Standardisation\n\npreproc_obj <- preProcess(\n  train_data %>% select(all_of(cont_vars)),\n  method = c(\"center\", \"scale\")  \n)\n\ntrain_scaled <- predict(preproc_obj, train_data)\ntest_scaled <- predict(preproc_obj, test_data)\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":false,"output-file":"EDA V2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":"journal","smooth-scroll":true,"anchor-sections":true,"title":"EDA","author":"Saadia Abdullah","date":"2025-09-21"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}